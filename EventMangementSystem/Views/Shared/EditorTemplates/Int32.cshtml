@using EventManagementSystem.Utility
@model int?

@{
    int i;
    if (!Model.HasValue)
    {
        i = 0;
    }
    else
    {
        i = Model.Value;
    }
    
    var htmlAttributes = new RouteValueDictionary();
    if (ViewBag.@class != null)
    {
        htmlAttributes.Add("class", "form-control " + ViewBag.@class);
    }
    else
    {
        htmlAttributes.Add("class", "form-control");
    }
       
    if (ViewBag.placeholder != null)
    {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    }
    if (ViewBag.ShowLabel != null && !(bool)ViewBag.ShowLabel)
    {
        @Html.TextBoxFor(m => m, null, htmlAttributes)    
    }
    else
    {
        <div class="form-group@(Html.ValidationErrorFor(m => m, " has-error"))">
            @Html.LabelFor(m => m, new { @class = "control-label" })
            @Html.TextBox(
                "",
                ViewData.TemplateInfo.FormattedModelValue,
                ViewBag.ClearTextField == true ? new { @class = "form-control clear-text-field input-block-level" } : new { @class = "form-control input-block-level" })
            @Html.ValidationMessageFor(m => m, null, new { @class = "help-block" })
        </div> 
    }
}



